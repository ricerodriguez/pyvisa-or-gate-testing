import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import statistics as s
import argparse
    #give us a test type and a list

file = open('stats.txt','w+')
file.write('Results \n')
file.close()

def Cp(mylist, usl, lsl):
    arr = np.array(mylist)
    arr = arr.ravel()
    sigma = np.std(arr)
    Cp = float(usl - lsl) / (6*sigma)
    return Cp


def Cpk(mylist, usl, lsl):
    arr = np.array(mylist)
    arr = arr.ravel()
    sigma = np.std(arr)
    m = np.mean(arr)

    Cpu = float(usl - m) / (3*sigma)
    Cpl = float(m - lsl) / (3*sigma)
    Cpk = np.min([Cpu, Cpl])
    return Cpk

def histogram(test,results,xaxis,usl,lsl):
    wub = open('stats.txt', 'a')
    mean = s.mean(results)
    stdev = s.stdev(results)
    testCp = Cp(results,usl, lsl)
    testCpK = Cpk(results,usl,lsl)


    wub.write('{} Mean: {},\t Stdev: {} \t Cp: {} \t CpK: {} \n'.format(test,mean,stdev,testCp,testCpK))
    wub.close()

    testRes = pd.Series(results)
    testRes.plot.hist(grid = True, bins = 70, rwidth = .9, color = '#60ac8c')

    plt.title ('Results of {} Test'.format(test))
    plt.ylabel('Frequency')
    plt.xlabel(xaxis)
    plt.grid(axis = 'y', alpha = .75)

    plt.savefig('{}_Histogram.png'.format(test))
    plt.show()


if __name__ == '__main__':
    # results = [.2,.56,.8,.4,.5,.1,.6,.7,.6,.8,.4,1,.58,.5,.8]
    # test = 'Example'
    # mean = round(s.mean(results),3)
    # stdev = round(s.stdev(results),3)
    #
    # histogram(test,results,mean,stdev)

    # contact test
    xaxis_0 = ' Voltage'
    test_0 = 'Contact'
    usl_0 = 1.5
    lsl_0 = .75
    contact_Results = [ 0.889,0.891,0.888,0.887,0.890,0.889,0.889,0.890,0.889,0.894,0.898,0.888,0.887,0.886,0.887,
                        0.897,0.898,0.897,0.008,0.898,0.900,0.899,0.898,0.899,0.899,0.900,0.897,0.897,0.895,0.895,
                        1.384,1.481,1.353,1.517,1.391,1.360,1.479,1.369,1.438,1.522,1.471,1.437,1.384,1.456,1.439,
                        0.896,0.896,0.895,0.897,0.896,0.896,0.895,0.896,0.898,0.898,0.896,0.895,0.895,0.894,0.893,
                        0.896,0.895,0.895,0.898,0.896,0.896,0.895,0.896,0.901,0.896,0.896,0.895,0.896,0.893,0.895,
                        1.485,0.461,1.355,1.514,1.370,1.496,1.405,1.393,1.422,1.398,1.437,1.491,1.463,1.390,1.379,
                        1.373,1.422,1.346,1.397,1.467,2.134,1.393,1.378,1.437,1.500,1.449,1.365,1.455,1.410,1.427,
                        0.899,0.899,0.899,0.901,0.899,0.900,0.899,0.900,0.901,0.899,0.898,0.878,0.899,0.897,0.897,
                        0.887,0.907,0.906,0.908,0.909,0.908,0.907,0.910,0.920,0.908,0.907,0.885,0.906,0.905,0.906,
                        1.372,1.379,1.399,1.403,1.369,1.386,1.394,1.390,1.333,1.433,1.432,1.471,1.380,1.404,1.495,
                        0.899,0.897,0.897,0.899,0.898,0.899,0.899,0.898,0.898,0.897,0.896,0.897,0.897,0.896,0.896,
                        0.891,0.888,0.889,0.890,0.889,0.889,0.890,0.889,1.000,0.889,0.888,0.889,0.888,0.887,0.887,
                        0.889,0.891,0.888,0.887,0.890,0.889,0.889,0.890,0.889,0.894,0.898,0.888,0.887,0.886,0.887,
                        0.897,0.898,0.897,0.008,0.898,0.900,0.899,0.898,0.899,0.899,0.900,0.897,0.897,0.895,0.895,
                        1.384,1.481,1.353,1.517,1.391,1.360,1.479,1.369,1.438,1.522,1.471,1.437,1.384,1.456,1.439,
                        0.896,0.896,0.895,0.897,0.896,0.896,0.895,0.896,0.898,0.898,0.896,0.895,0.895,0.894,0.893,
                        0.896,0.895,0.895,0.898,0.896,0.896,0.895,0.896,0.901,0.896,0.896,0.895,0.896,0.893,0.895,
                        1.485,0.461,1.355,1.514,1.370,1.496,1.405,1.393,1.422,1.398,1.437,1.491,1.463,1.390,1.379,
                        1.373,1.422,1.346,1.397,1.467,2.134,1.393,1.378,1.437,1.500,1.449,1.365,1.455,1.410,1.427,
                        0.899,0.899,0.899,0.901,0.899,0.900,0.899,0.900,0.901,0.899,0.898,0.878,0.899,0.897,0.897,
                        0.887,0.907,0.906,0.908,0.909,0.908,0.907,0.910,0.920,0.908,0.907,0.885,0.906,0.905,0.906,
                        1.372,1.379,1.399,1.403,1.369,1.386,1.394,1.390,1.333,1.433,1.432,1.471,1.380,1.404,1.495,
                        0.899,0.897,0.897,0.899,0.898,0.899,0.899,0.898,0.898,0.897,0.896,0.897,0.897,0.896,0.896,
                        0.891,0.888,0.889,0.890,0.889,0.889,0.890,0.889,1.000,0.889,0.888,0.889,0.888,0.887,0.887]
    histogram(test_0, contact_Results,xaxis_0,usl_0,lsl_0)

    # output drive tests
    xaxis_1 = 'Current'
    test_1 = 'Output Drive Current Low'
    usl_1  = .04
    lsl_1 = -.001
    ODLOW = [ 0.043, 0.041, 0.044, 0.04 , 0.042, 0.042, 0.041, 0.042, 0.041, 0.039, 0.042,
             0.039, 0.041, 0.04 , 0.042, 0.039, 0.041, 0.039, 0.042, 0.042, 0.042, 0.04 ,
             0.042, 0.039, 0.043, 0.041, 0.044, 0.04 , 0.042, 0.042, 0.041, 0.042, 0.041,
             0.039, 0.042, 0.039, 0.041, 0.04 , 0.042, 0.039, 0.041, 0.039, 0.042, 0.042,
             0.042, 0.04 , 0.042, 0.039, 0.043, 0.041, 0.044, 0.04 , 0.042, 0.042, 0.041,
             0.042, 0.041, 0.039, 0.042, 0.039, 0.041, 0.04 , 0.042, 0.039, 0.041, 0.039,
             0.042, 0.042, 0.042, 0.04 , 0.042, 0.039, 0.04 , 0.042, 0.039, 0.041, 0.039]

    histogram(test_1,ODLOW,xaxis_1,usl_1,lsl_1)


    xaxis_2 = 'Current'
    test_2 = 'Output Drive Current High'
    usl_2 = .04
    lsl_2 = .0021
    ODHI = [0.043,0.041,0.044,0.04 ,0.042,0.042,0.041,0.042,0.041,0.039,0.042,0.039,0.042,
            0.039,0.041,0.04 ,0.042,0.039,0.041,0.039,0.042,0.042,0.042,0.04 ,0.039,0.042,
            0.042,0.039,0.043,0.041,0.044,0.04 ,0.042,0.042,0.041,0.042,0.041,0.039,0.042,
            0.039,0.042,0.039,0.041,0.04 ,0.042,0.039,0.041,0.039,0.042,0.042,0.039,0.042,
            0.042,0.04 ,0.042,0.039,0.044,0.04 ,0.042,0.042,0.041,0.042,0.041,0.039,0.042,
            0.039,0.042,0.039,0.041,0.04 ,0.042,0.039,0.041,0.039,0.042,0.042,0.039,0.042,
            0.042,0.04 ,0.042,0.039,0.044,0.04 ,0.042,0.042,0.041,0.042,0.041,0.039,0.042,]

    histogram(test_2,ODHI,xaxis_2,usl_2,lsl_2)

    # output short current test
    xaxis_3 = 'Current'
    test_3 = 'Output Short Current '
    usl_3 = .1
    lsl_3 = .04
    OSC = [.046 ,.046 ,.05 ,.031 ,.05 ,.035 ,.045 ,.034 ,.037 ,0.04 ,0.04 ,0.047,0.045,0.045,
           0.049,.046 ,.045 ,.047 ,.028 ,.047 ,.038 ,.036 ,.036 ,.041 ,0.044,0.042,0.047,0.043,
           0.046,0.047,.042 ,.044 ,.045 ,.029 ,.045 ,.039 ,.041 ,.042 ,.041 ,0.042,0.044,0.044,
           0.046,0.044,0.047,.031 ,.05 ,.035 ,.045 ,.034 ,.037 ,0.04 ,0.04 ,0.047,0.045,0.045,
           0.049,.046 ,.045 ,.047 ,.028 ,.047 ,.038 ,.036 ,.036 ,.041 ,0.044,0.042,0.047,0.043,
           0.046,0.047,.042 ,.044 ,.045 ,.029 ,.045 ,.039 ,.041 ,.042 ,.041 ,0.042,0.044,0.044,
           0.046,0.044,0.047,.031 ,.05 ,.035 ,.045 ,.034 ,.037 ,0.04 ,0.04 ,0.047,0.045,0.045,
           0.042,0.047,0.048,0.047,0.048,0.041,0.04 ,0.039,0.037,0.043,0.044,0.043,0.045,0.047,
           0.046]
    histogram(test_3,OSC,xaxis_3,usl_3,lsl_3)


# Power Consumption
    xaxis_4 = 'Current'
    test_4 = 'Power Consumption'
    usl_4 = .07
    lsl_4 = 0
    PCT = [0.00011,0.00011,0.00011,0.00013,0.00013,0.00011,0.00011,0.00012,0.00012,0.00011,0.00011,
        0.00014,0.00014,0.00015,0.00015,0.00015,0.00015,0.00016,0.00016,0.00010,0.00010,0.00011,0.00011,
        0.00011,0.00011,0.00011,0.00011,0.00011,0.00011]

    histogram(test_4,PCT,xaxis_4,usl_4,lsl_4)


# $Voltage Thresholds



    xaxis_5 = 'Voltage'
    xaxis_6 = 'Voltage'

    test_5 = 'Voltage Threshold Low'
    test_6 = 'Voltage Threshold High'

    usl_5 = 2
    usl_6 = 2

    lsl_5 = .8
    lsl_6 = 0

    VTLOW = [1.3 ,1.4 ,1.29,1.4 ,1.4 ,1.5 ,1.5 ,1.6 ,1.4 ,1.19,1.29,1.29,1.4 ,
            1.29,1.3 ,1.4 ,1.5 ,1.6 ,1.6 ,1.4 ,1.4 ,1.5 ,1.6 ,1.6 ,1.0 , 1.4,
            1.3 ,1.39,1.4 ,1.29,1.4 ,1.4 ,1.6 ,1.5 ,1.6 ,1.4 ,1.3 ,1.4 ,1.39]

    VTHI =  [0.8,0.9,0.9,0.9,0.8,0.9,1.0,1.0,1.0,0.9,0.9,0.9,0.9,0.9,0.8,0.9,
            1.0,1.0,1.0,0.9,0.9,1.0,1.0,1.0,5.0,1.7,0.9,0.9,0.9,0.9,0.9,1.0,
            0.9,1.0,0.9,0.9,0.9,0.9,0.9,0.8]

    histogram(test_5,VTLOW*6,xaxis_5,usl_5,lsl_5)
    histogram(test_6,VTHI*6,xaxis_6,usl_6,lsl_6)
